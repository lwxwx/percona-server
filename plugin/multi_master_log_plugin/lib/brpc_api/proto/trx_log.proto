syntax="proto2";
package MMLP_BRPC;
option cc_generic_services = true;

message BenchLogMsg
{
	required uint32 page_no = 1;
	required uint32 row_no = 2;
}

message TrxLogMsg
{
    required sint32 type = 1;
    required uint32 space_id = 2;
    required uint32 page_no = 3;
    required uint32 offset = 4;
    required bytes rec = 5;
	repeated BenchLogMsg benchmsg = 6;
}

message LogSendRequest
{
    required uint64 trxID = 1;
    required bool is_valid = 2;
    repeated TrxLogMsg log_msg = 3;
};

message LogSendResponse
{
    required sint32 send_reply =  1;
};

message LogRequireRequest
{
    required uint64 trxID = 1;
};

message LogRequireResponse
{
    required sint32 require_reply = 1;
    required bool is_valid = 2;
    repeated TrxLogMsg log_msg = 3;
	optional uint64 trxID = 4;
};

service TrxLogService {
    rpc sendLog(LogSendRequest) returns (LogSendResponse);
    rpc requireLog(LogRequireRequest) returns (LogRequireResponse);
};
